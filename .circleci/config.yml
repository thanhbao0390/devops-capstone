# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

orbs: 
   slack: circleci/slack@4.10.1

commands:
   destroy-environment:
      description: Destroy front-end cloudformation stacks
      parameters:
         workflow_id:
            type: string
      steps:
         - run:
            name: Destroy frontend
            when: on_fail
            command: |
               aws s3 rb s3://udapeople-<< parameters.workflow_id >> --force
               aws cloudformation delete-stack --stack-name udapeople-frontend-<< parameters.workflow_id >>

jobs:
   build:
      docker:
         - image: cimg/go:1.17
      working_directory: ~/repo
      steps:
         - checkout
         - setup_remote_docker:
            version: 20.10.14
            docker_layer_caching: true
         - run:
            name: build and tag docker hub
            command: |
               cd nginx-hello
               make build
               # docker login -u ${DOCKERHUB_USERNAME} -p ${DOCKERHUB_PASSWORD}
               # docker build -t nginx-hello:latest .
               # docker tag nginx-hello:latest ${DOCKERHUB_USERNAME}/nginx-hello:latest
               # docker push ${DOCKERHUB_USERNAME}/nginx-hello:latest

   test:
      docker:
         - image: cimg/go:1.17
      working_directory: ~/repo
      steps:
         - checkout
         - setup_remote_docker:
            version: 20.10.14
            docker_layer_caching: true
         - run:
            name: run test
            command: |
               cd nginx-hello
               make test &
               sleep 120s

   deploy-infrastructure:
      docker:
         - image: amazon/aws-cli:latest
      working_directory: ~/repo
      steps:
         - checkout
         - run:
            name: Ensure front-end infrastructure exist
            command: |
               aws cloudformation deploy \
               --template-file .circleci/files/frontend.yml \
               --stack-name "udapeople-frontend-${CIRCLE_WORKFLOW_ID:0:7}" \
               --parameter-overrides ID="${CIRCLE_WORKFLOW_ID:0:7}" \
               --tags project=udapeople-frontend-${CIRCLE_WORKFLOW_ID:0:7} 
         - destroy-environment:
            workflow_id: ${CIRCLE_WORKFLOW_ID:0:7}

   deploy-frontend:
      docker:
         - image: cimg/go:1.17
      working_directory: ~/repo
      steps:
         - checkout
         - run:
            name: Deploy frontend objects
            command: |
               aws s3 sync nginx-hello s3://udapeople-${CIRCLE_WORKFLOW_ID:0:7}
         - destroy-environment:
            workflow_id: ${CIRCLE_WORKFLOW_ID:0:7}


workflows:
   capstone:
      jobs:
         - build
         - test:
            requires: [build]
         - deploy-infrastructure:
            requires: [test]
            filters:
               branches:
                  only: [main]
         - deploy-frontend:
            requires: [deploy-infrastructure]